<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Coding Experience]]></title>
  <link href="http://thaiat.github.io/atom.xml" rel="self"/>
  <link href="http://thaiat.github.io/"/>
  <updated>2014-03-13T17:24:03+02:00</updated>
  <id>http://thaiat.github.io/</id>
  <author>
    <name><![CDATA[Avi Haiat]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Install and Use Octopress on Windows]]></title>
    <link href="http://thaiat.github.io/blog/2014/03/13/how-to-install-and-use-octopress-on-windows/"/>
    <updated>2014-03-13T14:33:36+02:00</updated>
    <id>http://thaiat.github.io/blog/2014/03/13/how-to-install-and-use-octopress-on-windows</id>
    <content type="html"><![CDATA[<p>A quick and easy 6 steps tutorial to get up and running with octopress and github pages</p>

<blockquote><p><strong>NOTE:</strong> <br/>
As a pre-requisite you should make sure you have a public github repo with the name : <code>myusername.github.io</code></p></blockquote>

<h3>Step 1: Install Chocolatey</h3>

<ol>
<li>Got to <a href="http://chocolatey.org">http://chocolatey.org</a></li>
<li>Open a command prompt</li>
<li>cd to <code>c:\</code></li>
<li>Paste in and execute the following code from chocolatey home page</li>
</ol>


<figure class='code'><figcaption><span>Install Chocolatey</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span>powershell -NoProfile -ExecutionPolicy unrestricted -Command &quot;iex
</span><span class='line'>((new-object net.webclient).DownloadString(<span class="s1">&#39;https://chocolatey.org/install.ps1&#39;</span>))&quot;
</span><span class='line'>&amp;&amp; <span class="k">SET</span> <span class="nv">PATH</span><span class="o">=</span><span class="nv">%PATH%</span>;<span class="nv">%systemdrive%</span>\chocolatey\bin
</span></code></pre></td></tr></table></div></figure>


<p>This will install chocolatey in <code>C:\Chocolatey</code></p>

<h3>Step 2: Make sure Git is installed or install it via Chocolatey</h3>

<figure class='code'><figcaption><span>Install Git with Chocolatey</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>choco install git
</span></code></pre></td></tr></table></div></figure>


<p>To check that git is installed close and reopen a command prompt and run the following command:</p>

<figure class='code'><figcaption><span>Check Git version</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>git --version
</span></code></pre></td></tr></table></div></figure>


<p>You should get <code>git version 1.0.0.msysgit.0</code></p>

<h3>Step 3 : Install Ruby</h3>

<ol>
<li>Install <code>Ruby 1.9.3-p545</code> from <code>http://rubyinstaller.org</code></li>
<li>Ruby should be installed in <code>C:\Ruby193</code></li>
<li>Add the following path to the system variables Path : <code>c:\Ruby193\bin</code></li>
<li>Exit and reopen command prompt and run <code>ruby --version</code>, you should get <code>ruby 1.9.3-p545</code></li>
<li>Install ruby developpement kit with chocolatey</li>
</ol>


<figure class='code'><figcaption><span>Install Ruby Debkit with Chocolatey</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>c:
</span><span class='line'>choco install ruby.devkit
</span></code></pre></td></tr></table></div></figure>


<p>This will install the devkit in <code>C:\Devkit</code></p>

<h3>Step 4 : Install Octopress</h3>

<p>Navigate to your github local repositories folder (for example mine is d:\github) <br/>
The installation of Octopress consist in cloning the repository of Octopress</p>

<figure class='code'><figcaption><span>Clone Octopress repository</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>git clone git:<span class="n">//github.com/imathis/octopress.git</span> blog
</span></code></pre></td></tr></table></div></figure>


<p>Navigate to the created folder and then run the following command to install the dependencies</p>

<figure class='code'><figcaption><span>Install Octopress dependencies</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>Then install the default Octopress theme</p>

<figure class='code'><figcaption><span>Install Octopress default theme</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>rake install
</span></code></pre></td></tr></table></div></figure>


<p>Next edit <code>_config.yml</code> and adjust it with your blog properties (title,name, google tracker, etc&hellip;)</p>

<p>And now we can generate the site</p>

<figure class='code'><figcaption><span>Generate and preview Octopress blog</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>rake generate &amp;&amp; rake preview
</span></code></pre></td></tr></table></div></figure>


<p>You can open a browser and navigate to <code>http://localhost:4000</code></p>

<h3>Step 5 : Blogging</h3>

<p>To create a new post</p>

<figure class='code'><figcaption><span>Create a new blog post</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>rake new_post[<span class="s2">&quot;Hello World Post No 1&quot;</span>]
</span></code></pre></td></tr></table></div></figure>


<p>The new post file is a simple markdown file generated in <code>source\_posts</code></p>

<h3>Step 6 : Publishing your blog to github pages</h3>

<p>Github pages expect to have two branches, the source branch and the master branch. The master branch is the one that github pages will show. The changes in the source branch won’t be published until you push your changes to master. You can configure those branchs manually and add your github pages repository as a remote, but there is also a rake task that does all for you:</p>

<figure class='code'><figcaption><span>rake command for setting up github pages</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>rake setup_github_pages[repo].
</span></code></pre></td></tr></table></div></figure>


<p>In the case of this blog, I ran <code>rake setup_github_pages[git@github.com:myusername/myusername.github.io.git]</code> and then <code>rake deploy</code> to upload the blog. <br/>
In a snap the blog will be accessible at the url <a href="http://myusername.github.io.">http://myusername.github.io.</a></p>

<p>Remember that rake deploy just generates the blog a push to the master branch. Your source branch won’t be uploaded to github if you don’t want to. You probably want, to have a secure backup online, among other reason. Commit your changes and do</p>

<figure class='code'><figcaption><span>pushing the sources</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>git push origin source.
</span></code></pre></td></tr></table></div></figure>


<h2>Workflow when editing your blog</h2>

<ol>
<li>Make your modification to your local repo using <code>rake new_post</code> and editing your markdown</li>
<li><code>rake generate &amp;&amp; rake preview</code> to check your changes</li>
<li><code>git add .</code> and <code>git commit -m "update blog"</code></li>
<li><code>rake deploy</code> to deploy the resulting blog</li>
<li><code>git push origin source</code> to deploy your Octopress sources</li>
</ol>


<p>Now you have no excuse not making a blog of your own&hellip; <br/>
Happy Coding <br/>
Avi</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Extending an Existing Directive in Angularjs]]></title>
    <link href="http://thaiat.github.io/blog/2014/03/10/extending-an-existing-directive-in-angularjs/"/>
    <updated>2014-03-10T12:12:32+02:00</updated>
    <id>http://thaiat.github.io/blog/2014/03/10/extending-an-existing-directive-in-angularjs</id>
    <content type="html"><![CDATA[<p>Working example : <a href="http://thaiat.github.io/angular-extending-directive/">http://thaiat.github.io/angular-extending-directive/</a></p>

<p>Let&rsquo;s say you have a third party angularjs directive that you want to extend or simply access the api defined by its controller. <br/>
We could use <code>require</code> but that means that we have to put the 2 directives on the same element, or that the extended directive should be contained inside the first one (looks weird), because require will look up the chain of html.</p>

<p>Well&hellip; this is not always possible as we do not have control on the code defining the first directive. It could restrict its usage to &lsquo;E&rsquo;, meaning that our extended directive cannot be anymore retricted to &lsquo;E&rsquo;.</p>

<p>How can we easily do that, and in a more natural way meaning the extended directive should wrap the first directive ?</p>

<p>Let&rsquo;s first start with some simple html</p>

<figure class='code'><figcaption><span>index.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>    <span class="nt">&lt;head&gt;</span>
</span><span class='line'>        <span class="nt">&lt;title&gt;</span>angular-extending-directive<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>        <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>       <span class="nc">.circle</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">border</span><span class="o">:</span> <span class="m">1px</span> <span class="nb">black</span> <span class="k">solid</span><span class="p">;</span>
</span><span class='line'>            <span class="k">text-align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>            <span class="k">padding</span><span class="o">:</span> <span class="m">4px</span><span class="p">;</span>
</span><span class='line'>            <span class="k">font-size</span><span class="o">:</span> <span class="m">40px</span><span class="p">;</span>
</span><span class='line'>            <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">50px</span><span class="p">;</span>
</span><span class='line'>            <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">50px</span><span class="p">;</span>
</span><span class='line'>            <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">50</span><span class="o">%</span><span class="p">;</span>
</span><span class='line'>            <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">touch</span><span class="o">-</span><span class="n">callout</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>            <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">user</span><span class="o">-</span><span class="n">select</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>            <span class="o">-</span><span class="n">khtml</span><span class="o">-</span><span class="n">user</span><span class="o">-</span><span class="n">select</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>            <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">user</span><span class="o">-</span><span class="n">select</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>            <span class="o">-</span><span class="n">ms</span><span class="o">-</span><span class="n">user</span><span class="o">-</span><span class="n">select</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>            <span class="n">user</span><span class="o">-</span><span class="n">select</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>            <span class="k">cursor</span><span class="o">:</span> <span class="k">pointer</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>         <span class="nc">.counter</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">width</span><span class="o">:</span> <span class="m">50px</span><span class="p">;</span>
</span><span class='line'>            <span class="k">height</span><span class="o">:</span> <span class="m">50px</span><span class="p">;</span>
</span><span class='line'>            <span class="k">background-color</span><span class="o">:</span> <span class="nb">green</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nt">&lt;/style&gt;</span>
</span><span class='line'>        <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;bower_components/angular/angular.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>        <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;scripts/app.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;body</span> <span class="na">ng-app=</span><span class="s">&quot;myApp&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;h1&gt;</span>counter<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>        <span class="nt">&lt;counter&gt;&lt;/counter&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We are defining a counter directive with some minimal css.</p>

<p>Our <strong>counter</strong> directive should display a number, starting at 0, and increment it each time we click on it.
Most of the chances are that this third party directive will use an isolate scope.</p>

<p>Again this is pretty simple, and here is the code.</p>

<figure class='code'><figcaption><span>scripts/app.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">myApp</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;myApp&#39;</span><span class="p">,</span> <span class="p">[]);</span>
</span><span class='line'><span class="nx">myApp</span><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;counter&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">scope</span><span class="o">:</span> <span class="p">{},</span>
</span><span class='line'>    <span class="nx">controller</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">$element</span><span class="p">,</span> <span class="nx">$attrs</span><span class="p">,</span> <span class="nx">$transclude</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">increment</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$scope</span><span class="p">.</span><span class="nx">value</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="p">};</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">link</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">iElm</span><span class="p">,</span> <span class="nx">iAttrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">iElm</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">e</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">scope</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;click counter&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">scope</span><span class="p">.</span><span class="nx">increment</span><span class="p">();</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">restrict</span><span class="o">:</span> <span class="s1">&#39;E&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">template</span><span class="o">:</span> <span class="s1">&#39;&lt;div class=&quot;circle counter&quot;&gt;&lt;/div&gt;&#39;</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>The directive presents a circle with a number in it. Each time you click it will increment the number.</p>

<p>Now we want to use this existing directive but extend its behavior.
For the matter of the explanation, let&rsquo;s create a new directive called <strong>wrappercounter</strong> that wraps it into a wider circle, and when will click on it, it should log a console message.</p>

<p>The html for this new directive should be:</p>

<figure class='code'><figcaption><span>index.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>wrapcounter<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;wrapcounter&gt;</span>
</span><span class='line'>  <span class="nt">&lt;counter&gt;&lt;/counter&gt;</span>
</span><span class='line'><span class="nt">&lt;/wrapcounter&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>and to please our eyes we can add the following css</p>

<figure class='code'><figcaption><span>index.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.wrapcounter</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">100px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">100px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">background-color</span><span class="o">:</span> <span class="nb">red</span><span class="p">;</span>
</span><span class='line'>    <span class="n">box</span><span class="o">-</span><span class="n">pack</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>    <span class="n">box</span><span class="o">-</span><span class="n">align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>    <span class="k">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>    <span class="n">flex</span><span class="o">-</span><span class="k">direction</span><span class="o">:</span> <span class="n">row</span><span class="p">;</span>
</span><span class='line'>    <span class="n">flex</span><span class="o">-</span><span class="n">wrap</span><span class="o">:</span> <span class="n">wrap</span><span class="p">;</span>
</span><span class='line'>    <span class="k">justify</span><span class="o">-</span><span class="k">content</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>    <span class="n">align</span><span class="o">-</span><span class="n">items</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>    <span class="k">cursor</span><span class="o">:</span> <span class="k">pointer</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Depending on how the first directive <strong>counter</strong> was written we have 3 ways to achieve this.</p>

<h2>1st way : element.isolateScope</h2>

<p>If the first directive controller uses $scope (like above) we have to retreive the inner element, and the api declared by the scope will be available through <code>element.isolateScope()</code>.</p>

<figure class='code'><figcaption><span>scripts/app.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">myApp</span><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;wrapcounter&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">restrict</span><span class="o">:</span> <span class="s1">&#39;E&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">transclude</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">template</span><span class="o">:</span> <span class="s1">&#39;&lt;div class=&quot;circle wrapcounter&quot; ng-transclude&gt;&lt;/div&gt;&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">link</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">iElm</span><span class="p">,</span> <span class="nx">iAttrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// retreive the inner directive element</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">counter</span> <span class="o">=</span> <span class="nx">iElm</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;counter&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">innerScope</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">counter</span><span class="p">).</span><span class="nx">isolateScope</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">iElm</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">e</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">scope</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// decorating the increment function with a console log.</span>
</span><span class='line'>          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;click wrapper&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="c1">// accessing the inner directive api</span>
</span><span class='line'>          <span class="nx">innerScope</span><span class="p">.</span><span class="nx">increment</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2nd way : element.controller(name)</h2>

<p>This only works if the controller of the first directive uses the <em>this (or controllerAs)</em> syntax.
Let&rsquo;s modify the first directive</p>

<figure class='code'><figcaption><span>scripts/app.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">myApp</span><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;counter&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">scope</span><span class="o">:</span> <span class="p">{},</span>
</span><span class='line'>    <span class="nx">controller</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">$element</span><span class="p">,</span> <span class="nx">$attrs</span><span class="p">,</span> <span class="nx">$transclude</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">vm</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">vm</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">vm</span><span class="p">.</span><span class="nx">increment</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">vm</span><span class="p">.</span><span class="nx">value</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>      <span class="p">};</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">controllerAs</span><span class="o">:</span> <span class="s1">&#39;vm&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">link</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">iElm</span><span class="p">,</span> <span class="nx">iAttrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">iElm</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">e</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">scope</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;click counter&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">scope</span><span class="p">.</span><span class="nx">vm</span><span class="p">.</span><span class="nx">increment</span><span class="p">();</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">restrict</span><span class="o">:</span> <span class="s1">&#39;E&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">template</span><span class="o">:</span> <span class="s1">&#39;&lt;div class=&quot;circle counter&quot;&gt;&lt;/div&gt;&#39;</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>And now the second directive</p>

<figure class='code'><figcaption><span>scripts/app.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">myApp</span><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;wrapcounter&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">restrict</span><span class="o">:</span> <span class="s1">&#39;E&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">transclude</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">template</span><span class="o">:</span> <span class="s1">&#39;&lt;div class=&quot;circle wrapcounter&quot; ng-transclude&gt;&lt;/div&gt;&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">link</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">iElm</span><span class="p">,</span> <span class="nx">iAttrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// retreive the inner directive element</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">counter</span> <span class="o">=</span> <span class="nx">iElm</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;counter&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// retreive the inner controller</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">innerController</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">counter</span><span class="p">).</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;counter&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">iElm</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">e</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">scope</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// decorating the increment function with a console log.</span>
</span><span class='line'>          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;click wrapper&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="c1">// accessing the inner directive api</span>
</span><span class='line'>          <span class="nx">innerController</span><span class="p">.</span><span class="nx">increment</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3rd way : element.data</h3>

<p>Looking at the angluarjs source code we see this piece of code:</p>

<figure class='code'><figcaption><span>angular.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">hasElementTranscludeDirective</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="nx">$element</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;$&#39;</span> <span class="o">+</span> <span class="nx">directive</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s1">&#39;Controller&#39;</span><span class="p">,</span> <span class="nx">controllerInstance</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So we can use this to get access to the controller:</p>

<figure class='code'><figcaption><span>scripts/app.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">myApp</span><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;wrapcounter&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">restrict</span><span class="o">:</span> <span class="s1">&#39;E&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">transclude</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">template</span><span class="o">:</span> <span class="s1">&#39;&lt;div class=&quot;circle wrapcounter&quot; ng-transclude&gt;&lt;/div&gt;&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">link</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">scope</span><span class="p">,</span> <span class="nx">iElm</span><span class="p">,</span> <span class="nx">iAttrs</span><span class="p">,</span> <span class="nx">controller</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// retreive the inner directive element</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">counter</span> <span class="o">=</span> <span class="nx">iElm</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;counter&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// retreive the inner controller</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">innerController</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">counter</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;$&#39;</span> <span class="o">+</span> <span class="s1">&#39;counter&#39;</span> <span class="o">+</span> <span class="s1">&#39;Controller&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">iElm</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">e</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">scope</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// decorating the increment function with a console log.</span>
</span><span class='line'>          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;click wrapper&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="c1">// accessing the inner directive api</span>
</span><span class='line'>          <span class="nx">innerController</span><span class="p">.</span><span class="nx">increment</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you see in any case we have access to the api defined by the inner directive. We could change it, decorate or override existing functions, add our own functions if some are missing from the inner directive, etc&hellip;</p>

<p>Hope this makes sense&hellip;</p>

<p>Git repo : <a href="https://github.com/thaiat/angular-extending-directive/tree/master/scripts">https://github.com/thaiat/angular-extending-directive/tree/master/scripts</a></p>

<p>Happy coding.</p>

<p>Avi</p>

<p>PS: Big thanks to Nir Kaufman that helped me figure it out.</p>
]]></content>
  </entry>
  
</feed>
